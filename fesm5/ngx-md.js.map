{"version":3,"file":"ngx-md.js.map","sources":["ng://ngx-md/lib/ngx-md.service.ts","ng://ngx-md/lib/ngx-md.component.ts","ng://ngx-md/lib/ngx-md.config.ts","ng://ngx-md/lib/ngx-md.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core'\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { throwError, Observable } from 'rxjs'\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { Renderer, setOptions, parse } from 'marked';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NgxMdService {\r\n  private _renderer: any = new Renderer();\r\n  constructor(private _http: HttpClient) {\r\n    this.extendRenderer();\r\n    this.setMarkedOptions({});\r\n  }\r\n\r\n  // get the content from remote resource\r\n  getContent(path: string): Observable<any> {\r\n      return this._http.get(path, {responseType: 'text'}).pipe(map(res => res), catchError(this.handleError))\r\n  }\r\n\r\n   public get renderer() {\r\n     return this._renderer;\r\n   }\r\n\r\n   // handle data\r\n   public extractData(res: any): string {\r\n     return res.text() || '';\r\n   }\r\n\r\n   public setMarkedOptions(options: any) {\r\n     options = Object.assign({\r\n       gfm: true,\r\n       tables: true,\r\n       breaks: false,\r\n       pedantic: false,\r\n       sanitize: false,\r\n       smartLists: true,\r\n       smartypants: false\r\n     }, options);\r\n     options.renderer = this._renderer;\r\n     setOptions(options);\r\n   }\r\n\r\n   // comple markdown to html\r\n   public compile(data: string) {\r\n      return parse(data);\r\n   }\r\n\r\n   // handle error\r\n   private handleError(error: any): any {\r\n     let errMsg: string;\r\n     if (error instanceof fetch) {\r\n       const body = error.json() || '';\r\n       const err = body.error || JSON.stringify(body);\r\n       errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\r\n     } else {\r\n       errMsg = error.message ? error.message : error.toString();\r\n     }\r\n     return throwError(errMsg);\r\n   }\r\n\r\n   // extend marked render to support todo checkbox\r\n   private extendRenderer() {\r\n     this._renderer.listitem = function(text: string) {\r\n      if (/^\\s*\\[[x ]\\]\\s*/.test(text)) {\r\n      text = text\r\n        .replace(/^\\s*\\[ \\]\\s*/, '<input type=\"checkbox\" style=\" vertical-align: middle; margin: 0 0.2em 0.25em -1.6em; font-size: 16px; \" disabled> ')\r\n        .replace(/^\\s*\\[x\\]\\s*/, '<input type=\"checkbox\" style=\" vertical-align: middle; margin: 0 0.2em 0.25em -1.6em; font-size: 16px; \" checked disabled> ');\r\n          return '<li style=\"list-style: none\">' + text + '</li>';\r\n        } else {\r\n          return '<li>' + text + '</li>';\r\n        }\r\n      };\r\n   }\r\n}\r\n","\r\nimport { Component, ElementRef, OnInit, AfterViewInit, Input, PLATFORM_ID, Inject } from '@angular/core';\r\nimport { NgxMdService } from './ngx-md.service';\r\nimport { isPlatformBrowser } from '@angular/common';\r\nimport * as Prism from 'prismjs';\r\n\r\n@Component({\r\n    selector: 'markdown,[Markdown],ngx-md,[NgxMd]',\r\n    template: '<ng-content></ng-content>',\r\n    styles: [\r\n        `.token.operator, .token.entity, .token.url, .language-css .token.string, .style .token.string {\r\n            background: none;\r\n        }`\r\n    ]\r\n})\r\nexport class NgxMdComponent implements  AfterViewInit {\r\n    private _path: string;\r\n    private _data: string;\r\n    private _md: any;\r\n    private _ext: string;\r\n    changeLog: string[] = [];\r\n\r\n    constructor(\r\n        private _mdService: NgxMdService,\r\n        private _el: ElementRef,\r\n        @Inject(PLATFORM_ID) private platformId: string\r\n    ) { }\r\n\r\n   \r\n\r\n    @Input()\r\n    set path(value: string) {\r\n      if (value) {\r\n        this._path = value;\r\n        this.onPathChange();\r\n      }\r\n    }\r\n\r\n    @Input()\r\n    set data(value: string) {\r\n      if (value) {\r\n        this._data = value;\r\n        this.onDataChange(value);\r\n      }\r\n    }\r\n\r\n\r\n    // on input\r\n    onDataChange(data: string) {\r\n      if (data) {\r\n        this._el.nativeElement.innerHTML = this._mdService.compile(data);\r\n      } else {\r\n        this._el.nativeElement.innerHTML = '';\r\n      }\r\n      this.highlightContent(false);\r\n    }\r\n\r\n    /**\r\n     *  After view init\r\n     */\r\n    ngAfterViewInit() {\r\n      if (this._path) {\r\n        this.onPathChange();\r\n      } else if (!this._data) {\r\n        this.processRaw();\r\n      }\r\n    }\r\n\r\n    processRaw() {\r\n      this._md = this.prepare(decodeHtml(this._el.nativeElement.innerHTML));\r\n      this._el.nativeElement.innerHTML = this._mdService.compile(this._md);\r\n      this.highlightContent(false);\r\n    }\r\n\r\n    /**\r\n     * get remote conent;\r\n     */\r\n    onPathChange() {\r\n        this._ext = this._path && this._path.split('.').splice(-1).join();\r\n        this._mdService.getContent(this._path)\r\n            .subscribe(data => {\r\n                this._md = this._ext !== 'md' ? '```' + this._ext + '\\n' + data + '\\n```' : data;\r\n                this._el.nativeElement.innerHTML = this._mdService.compile(this.prepare(this._md));\r\n                this.highlightContent(false);\r\n            },\r\n            err => this.handleError);\r\n    }\r\n\r\n    /**\r\n     * catch http error\r\n     */\r\n    private handleError(error: any): Promise<any> {\r\n        console.error('An error occurred', error); // for demo purposes only\r\n        return Promise.reject(error.message || error);\r\n    }\r\n\r\n    /**\r\n     * Prepare string\r\n     */\r\n     prepare(raw: string) {\r\n        if (!raw) {\r\n            return '';\r\n        }\r\n        if (this._ext === 'md' || !this.path) {\r\n            let isCodeBlock = false;\r\n            return raw.split('\\n').map((line: string) => {\r\n                if (this.trimLeft(line).substring(0, 3) === '```') {\r\n                    isCodeBlock = !isCodeBlock;\r\n                }\r\n                return isCodeBlock ? line : line.trim();\r\n            }).join('\\n');\r\n        }\r\n        return raw.replace(/\\\"/g, '\\'');\r\n    }\r\n\r\n    /**\r\n     * Trim left whitespace\r\n     */\r\n    private trimLeft(line: string) {\r\n        return line.replace(/^\\s+|\\s+$/g, '');\r\n    }\r\n\r\n    /**\r\n     * Use Prism to highlight code snippets only on the browser\r\n     */\r\n    private highlightContent(async: boolean): void {\r\n      if (isPlatformBrowser(this.platformId)) {\r\n        Prism.highlightAll(async);\r\n      }\r\n    }\r\n}\r\n\r\nfunction decodeHtml(html: string) { // https://stackoverflow.com/a/7394787/588521\r\n    const txt = document.createElement('textarea');\r\n    txt.innerHTML = html;\r\n    return txt.value;\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class NgxMdConfig {\r\n  /** config modue */\r\n\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { NgxMdService } from './ngx-md.service';\r\nimport { NgxMdConfig } from './ngx-md.config';\r\nimport { NgxMdComponent } from './ngx-md.component';\r\n\r\n@NgModule({\r\n  declarations: [NgxMdComponent],\r\n  providers: [NgxMdService],\r\n  exports: [NgxMdComponent],\r\n})\r\nexport class NgxMdModule {\r\n  public static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: NgxMdModule,\r\n      providers: [NgxMdConfig]\r\n    };\r\n  }\r\n}\r\n"],"names":["Prism.highlightAll"],"mappings":"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"}
